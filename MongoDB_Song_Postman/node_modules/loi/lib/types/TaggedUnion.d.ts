import { Mixed, mixed, OutputOf, Type, TypeOf, UnionType } from '../iots';
export declare type Tagged<Tag extends string, A = any, O = A> = Type<A, O> & {
    _A: {
        [K in Tag]: string | number | boolean;
    };
};
export declare const isTagged: <Tag extends string>(tag: Tag) => (type: Mixed) => type is Tagged<Tag, any, any>;
export declare const getTagValue: <Tag extends string>(tag: Tag) => (type: Tagged<Tag, any, any>) => string | number | boolean;
export declare const taggedUnion: <Tag extends string, RTS extends Tagged<Tag, any, any>[]>(tag: Tag, types: RTS, name?: string) => UnionType<RTS, TypeOf<RTS["_A"]>, OutputOf<RTS["_A"]>, mixed>;
